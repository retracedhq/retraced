version: 2.1

experimental:
  notify:
    branches:
      only:
        - main

defaults: &defaults
  resource_class: large
  docker:
    - image: cimg/node:18.12.1
  working_directory: ~/repo

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-node18-{{ checksum "package.json" }}
            - v1-dependencies-node18-
      - run: make deps lint swagger cover
      - store_test_results:
          path: results
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-node18-{{ checksum "package.json" }}

  build_docker:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - restore_cache:
          keys:
            - v1-dependencies-node18-{{ checksum "package.json" }}
            - v1-dependencies-node18-
      - run: docker build --pull -t retracedhq/retraced:${CIRCLE_SHA1:0:7} -f deploy/Dockerfile-slim .
      # - run:
      #     name: Run local image vulnerability scan
      #     command: |
      #       curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b .
      #       ./grype --fail-on=medium  --only-fixed --config=.circleci/.anchore/grype.yaml -vv retracedhq/retraced:${CIRCLE_SHA1:0:7}
      - run: docker save -o retraced.tar retracedhq/retraced:${CIRCLE_SHA1:0:7}
      - persist_to_workspace:
          root: .
          paths:
            - ./retraced.tar

  build_postgres:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run: docker build --pull -t retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7} -f deploy/Dockerfile-postgres .
      # - run:
      #     name: Run local image vulnerability scan
      #     command: |
      #       curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b .
      #       ./grype --fail-on=medium  --only-fixed --config=.circleci/.anchore/grype.yaml -vv retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7}
      - run: docker save -o retraced-postgres.tar retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7}
      - persist_to_workspace:
          root: .
          paths:
            - ./retraced-postgres.tar

  build_nsq:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run: docker build --pull -t retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7} -f deploy/Dockerfile-nsq .
      # - run:
      #     name: Run local image vulnerability scan
      #     command: |
      #       curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b .
      #       ./grype --fail-on=medium  --only-fixed --config=.circleci/.anchore/grype.yaml -vv retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7}
      - run: docker save -o retraced-nsq.tar retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7}
      - persist_to_workspace:
          root: .
          paths:
            - ./retraced-nsq.tar

  deploy_beta:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/retraced.tar
      - run: docker load -i /tmp/workspace/retraced-postgres.tar
      - run: docker load -i /tmp/workspace/retraced-nsq.tar
      - run: docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:beta
      - run: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
      - deploy:
          command: docker push retracedhq/retraced:${CIRCLE_SHA1:0:7}
      - deploy:
          command: docker push retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7}
      - deploy:
          command: docker push retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7}
      - deploy:
          command: docker push retracedhq/retraced:beta

  ensure_image_exists:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
      - run: |
          docker pull retracedhq/retraced:${CIRCLE_SHA1:0:7}
          docker pull retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7}
          docker pull retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7}

  deploy_stable:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - restore_cache:
          keys:
            - v1-dependencies-node18-{{ checksum "package.json" }}
            - v1-dependencies-node18-
      - run: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
      # the original idea here was:
      #
      #    don't build, just pull. This ensures we're releasing the SHA that we just built and tested
      #
      # but since we don't really have a SaaS env to test this in right now, we're going to need
      # to come up with some other way to integration test this, ideally as part of tagged build
      - run: |
          docker pull retracedhq/retraced:${CIRCLE_SHA1:0:7}
          docker pull retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7}
          docker pull retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7}
      - run: |
          function semverParseInto() { # thanks cloudflare
              local RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)'
              eval $2=`echo $1 | sed -e "s#$RE#\1#"`
              eval $3=`echo $1 | sed -e "s#$RE#\2#"`
              eval $4=`echo $1 | sed -e "s#$RE#\3#"`
              eval $5=`echo $1 | sed -e "s#$RE#\4#"`
          }
          semverParseInto "$CIRCLE_TAG" MAJOR MINOR PATCH SPECIAL

          if [ -n "$SPECIAL" ]; then
              echo "pre-release != release, so just push the tag and exit"

              docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:${CIRCLE_TAG}
              docker push retracedhq/retraced:${CIRCLE_TAG}
              exit 0
          fi

          docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:stable
          docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:latest
          docker push retracedhq/retraced:stable
          docker push retracedhq/retraced:latest

          docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:${MAJOR}
          docker push retracedhq/retraced:${MAJOR}
          docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:${MAJOR}.${MINOR}
          docker push retracedhq/retraced:${MAJOR}.${MINOR}
          docker tag retracedhq/retraced:${CIRCLE_SHA1:0:7} retracedhq/retraced:${MAJOR}.${MINOR}.${PATCH}
          docker push retracedhq/retraced:${MAJOR}.${MINOR}.${PATCH}

          docker tag retracedhq/retraced-postgres:${CIRCLE_SHA1:0:7} retracedhq/retraced-postgres:${MAJOR}.${MINOR}.${PATCH}
          docker push retracedhq/retraced-postgres:${MAJOR}.${MINOR}.${PATCH}

          docker tag retracedhq/retraced-nsq:${CIRCLE_SHA1:0:7} retracedhq/retraced-nsq:${MAJOR}.${MINOR}.${PATCH}
          docker push retracedhq/retraced-nsq:${MAJOR}.${MINOR}.${PATCH}

  is_retracedhq:
    <<: *defaults
    steps:
      - run: |
          if [ "${CIRCLE_PROJECT_USERNAME}" != "retracedhq" ]; then
            echo nope nope nope
            exit 1
          fi

workflows:
  version: 2
  beta:
    jobs:
      - test
      - build_docker:
          requires:
            - test
      - build_postgres:
          requires:
            - test
      - build_nsq:
          requires:
            - test
      - is_retracedhq:
          filters:
            branches:
              only: /main/
      - deploy_beta:
          requires:
            - build_docker
            - build_postgres
            - build_nsq
            - is_retracedhq
          filters:
            branches:
              only: /main/

  stable_prod:
    jobs:
      - test:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - is_retracedhq:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - ensure_image_exists:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - deploy_stable:
          requires:
            - ensure_image_exists
            - test
            - is_retracedhq
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
