version: 2

experimental:
  notify:
    branches:
      only:
        - master

defaults: &defaults
  docker:
    - image: circleci/node:8
  working_directory: ~/repo

jobs:
  test:
    <<: *defaults
    environment:
      MOCHA_FILE: results/my-test-output.xml
      JUNIT_REPORT_PATH: results/my-test-output.xml
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: make deps swagger cover report-coverage ship-lint
      - store_test_results:
          path: results
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  build_docker:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: docker pull debian:buster-slim
      - run: docker login -u="$REPLICATED_SHIPRETRACED_USER" -p="$REPLICATED_SHIPRETRACED_PASSWORD" registry.replicated.com
      - run: docker build -f deploy/Dockerfile-slim -t registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} .
      - run: docker push registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7}

  deploy_unstable:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: docker pull debian:buster-slim
      - run: docker login -u="$REPLICATED_SHIPRETRACED_USER" -p="$REPLICATED_SHIPRETRACED_PASSWORD" registry.replicated.com
      - run: docker pull registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7}
      - run: docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:alpha
      - deploy:
          command: docker push registry.replicated.com/shipretraced/retraced:alpha

  ensure_image_exists:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: docker login -u="$REPLICATED_SHIPRETRACED_USER" -p="$REPLICATED_SHIPRETRACED_PASSWORD" registry.replicated.com
      - run:  |
          docker pull registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7}

  deploy_stable:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: docker login -u="$REPLICATED_SHIPRETRACED_USER" -p="$REPLICATED_SHIPRETRACED_PASSWORD" registry.replicated.com
      # the original idea here was:
      #
      #    don't build, just pull. This ensures we're releasing the SHA that we just built and tested
      #
      # but since we don't really have a SaaS env to test this in right now, we're going to need
      # to come up with some other way to integration test this, ideally as part of tagged build
      - run: docker pull registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7}
      - run: |
            function semverParseInto() { # thanks cloudflare
                local RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)'
                eval $2=`echo $1 | sed -e "s#$RE#\1#"`
                eval $3=`echo $1 | sed -e "s#$RE#\2#"`
                eval $4=`echo $1 | sed -e "s#$RE#\3#"`
                eval $5=`echo $1 | sed -e "s#$RE#\4#"`
            }
            semverParseInto "$CIRCLE_TAG" MAJOR MINOR PATCH SPECIAL

            if [ -n "$SPECIAL" ]; then
               echo "pre-release != release, so just push the tag and exit"

               docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:${CIRCLE_TAG}
               docker push registry.replicated.com/shipretraced/retraced:${CIRCLE_TAG}

               docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/library/retraced:${CIRCLE_TAG}
               docker login -u="$REPLICATED_LIBRARY_USER" -p="$REPLICATED_LIBRARY_PASSWORD" registry.replicated.com
               docker push registry.replicated.com/library/retraced:${CIRCLE_TAG}
               exit 0
            fi

            docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:stable
            docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:latest
            docker push registry.replicated.com/shipretraced/retraced:stable
            docker push registry.replicated.com/shipretraced/retraced:latest

            docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:${MAJOR}
            docker push registry.replicated.com/shipretraced/retraced:${MAJOR}
            docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:${MAJOR}.${MINOR}
            docker push registry.replicated.com/shipretraced/retraced:${MAJOR}.${MINOR}
            docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/shipretraced/retraced:${MAJOR}.${MINOR}.${PATCH}
            docker push registry.replicated.com/shipretraced/retraced:${MAJOR}.${MINOR}.${PATCH}

            docker login -u="$REPLICATED_LIBRARY_USER" -p="$REPLICATED_LIBRARY_PASSWORD" registry.replicated.com
            docker tag registry.replicated.com/shipretraced/retraced:${CIRCLE_SHA1:0:7} registry.replicated.com/library/retraced:${MAJOR}.${MINOR}.${PATCH}
            docker push registry.replicated.com/library/retraced:${MAJOR}.${MINOR}.${PATCH}

            docker build -t registry.replicated.com/library/retraced-postgres:${MAJOR}.${MINOR}.${PATCH} -f deploy/Dockerfile-postgres .
            docker push registry.replicated.com/library/retraced-postgres:${MAJOR}.${MINOR}.${PATCH}

            docker build -t registry.replicated.com/library/retraced-nsq:${MAJOR}.${MINOR}.${PATCH} -f deploy/Dockerfile-nsq .
            docker push registry.replicated.com/library/retraced-nsq:${MAJOR}.${MINOR}.${PATCH}

  is_retracedhq:
    <<: *defaults
    steps:
      - run: |
          if [ "${CIRCLE_PROJECT_USERNAME}" != "retracedhq" ]; then
            echo nope nope nope
            exit 1
          fi


workflows:
  version: 2
  unstable_staging:
    jobs:
      - test
      - is_retracedhq:
          filters:
            branches:
              only: /master/
      - build_docker:
          requires:
            - test
            - is_retracedhq
          filters:
            branches:
              only: /master/
      - deploy_unstable:
          requires:
            - build_docker

  stable_prod:
    jobs:
      - test:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - is_retracedhq:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - ensure_image_exists:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - deploy_stable:
          requires:
            - ensure_image_exists
            - test
            - is_retracedhq
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/

