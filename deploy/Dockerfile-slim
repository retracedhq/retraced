# # #
# Cron build
#
ARG NODEJS_IMAGE=node:18.15.0-alpine3.17
ARG ALPINE_IMAGE=alpine:3.17
FROM --platform=${BUILDPLATFORM:-linux/amd64} $ALPINE_IMAGE as cron

RUN apk add --update --no-cache ca-certificates curl \
  && rm -rf /tmp/* /var/cache/apk/*

ENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.2.1/supercronic-linux-amd64
ENV SUPERCRONIC=supercronic-linux-amd64
ENV SUPERCRONIC_SHA1SUM=d7f4c0886eb85249ad05ed592902fa6865bb9d70
RUN curl -fsSLO "$SUPERCRONIC_URL" \
  && echo "${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}" | sha1sum -c - \
  && chmod +x "$SUPERCRONIC" \
  && mv "$SUPERCRONIC" "/usr/local/bin/${SUPERCRONIC}" \
  && ln -s "/usr/local/bin/${SUPERCRONIC}" /usr/local/bin/retraced-auditlog-cron
COPY deploy/crontab /crontab

# # #
# Node build
#
FROM --platform=${BUILDPLATFORM:-linux/amd64} $NODEJS_IMAGE as node

#python
RUN apk add --no-cache --virtual .gyp \
  python3 \
  make \
  g++

WORKDIR /src
ADD package.json /src
ADD package-lock.json /src
RUN npm install

ADD . /src

RUN npm run build

FROM --platform=${BUILDPLATFORM:-linux/amd64} node as curl-builder

WORKDIR /app

ADD .env /app
ADD package.json /app
ADD package-lock.json /app

RUN npm install --omit=dev


# # #
# Main build
#
FROM $NODEJS_IMAGE

EXPOSE 3000

WORKDIR /app

# curl must be included for cron
RUN apk add --update --no-cache ca-certificates curl p11-kit \
  && rm -rf /tmp/* /var/cache/apk/*

ADD .env /app
ADD package.json /app

COPY --from=node /src/migrations /app/build/migrations
COPY --from=curl-builder /app/node_modules /app/node_modules
COPY --from=node /src/build /app/build
COPY --from=cron /usr/local/bin/supercronic-linux-amd64 /usr/local/bin/supercronic-linux-amd64
COPY --from=cron /usr/local/bin/retraced-auditlog-cron /usr/local/bin/retraced-auditlog-cron
COPY --from=cron /crontab /crontab

CMD ["node", "build/src/index.js"]
